new:173:33:void* operator new(std::size_t, void*)	16	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
shared_ptr_base.h:303:5:void std::_Sp_counted_base<_Lp>::_M_add_ref_copy() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:308:5:void std::_Sp_counted_base<_Lp>::_M_release() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = unsigned int]	16	static
GUI.cpp:13:4:GUI::render()::<lambda(std::shared_ptr<Button>)>	16	static
GUI.cpp:15:4:GUI::render()::<lambda(std::shared_ptr<TextBox>)>	16	static
GUI.cpp:8:6:virtual void GUI::render()	32	static
GUI.cpp:20:67:GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)>	16	static
GUI.cpp:18:5:int GUI::processInput(std::pair<unsigned int, unsigned int>)	48	static
shared_ptr_base.h:1169:7:std::__shared_ptr<_Tp, _Lp>::~__shared_ptr() [with _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr.h:103:11:std::shared_ptr<Button>::~shared_ptr()	16	static
GUI.cpp:28:6:void GUI::addButton(ButtonShape, Color, unsigned int, unsigned int, unsigned int, unsigned int)	64	static
shared_ptr_base.h:1169:7:std::__shared_ptr<_Tp, _Lp>::~__shared_ptr() [with _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr.h:103:11:std::shared_ptr<TextBox>::~shared_ptr()	16	static
GUI.cpp:34:6:void GUI::addTextBox(std::string, Color, unsigned int, unsigned int, unsigned int)	56	static
GUI.cpp:39:6:void GUI::setBackgroundColor(Color)	16	static
shared_ptr_base.h:131:7:void std::_Sp_counted_base<_Lp>::_M_destroy() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = unsigned int]	16	static
stl_vector.h:808:7:std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
stl_vector.h:826:7:std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
shared_ptr_base.h:1012:7:std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single; bool <anonymous> = false; bool <anonymous> = false]	16	static
shared_ptr_base.h:1167:7:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(const std::__shared_ptr<_Tp, _Lp>&) [with _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr.h:129:7:std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = Button]	16	static
stl_algo.h:3870:5:_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >; _Funct = GUI::render()::<lambda(std::shared_ptr<Button>)>]	40	static
stl_vector.h:808:7:std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
stl_vector.h:826:7:std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
shared_ptr_base.h:1012:7:std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single; bool <anonymous> = false; bool <anonymous> = false]	16	static
shared_ptr_base.h:1167:7:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(const std::__shared_ptr<_Tp, _Lp>&) [with _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr.h:129:7:std::shared_ptr<_Tp>::shared_ptr(const std::shared_ptr<_Tp>&) [with _Tp = TextBox]	16	static
stl_algo.h:3870:5:_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<std::shared_ptr<TextBox>*, std::vector<std::shared_ptr<TextBox> > >; _Funct = GUI::render()::<lambda(std::shared_ptr<TextBox>)>]	40	static
stl_algo.h:3954:5:_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >; _Predicate = GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)>]	32	static
stl_iterator.h:907:5:bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	24	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >]	24	static
unique_ptr.h:856:5:) [with _Tp = Button; _Args = {ButtonShape&, Color&, unsigned int&, unsigned int&, unsigned int&, unsigned int&}]	72	static
unique_ptr.h:286:7:std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = Button; _Dp = std::default_delete<Button>]	32	static
shared_ptr.h:290:2:std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = Button; _Del = std::default_delete<Button>; <template-parameter-2-3> = void; _Tp = Button]	24	static
shared_ptr_base.h:727:7:std::__shared_count<_Lp>::~__shared_count() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_vector.h:1200:7:void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	16	static
unique_ptr.h:856:5:) [with _Tp = TextBox; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, Color&, unsigned int&, unsigned int&, unsigned int&}]	80	static
unique_ptr.h:286:7:std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	32	static
shared_ptr.h:290:2:std::shared_ptr<_Tp>::shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = TextBox; _Del = std::default_delete<TextBox>; <template-parameter-2-3> = void; _Tp = TextBox]	24	static
stl_vector.h:1200:7:void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	16	static
shared_ptr_base.h:121:7:std::_Sp_counted_base<_Lp>::~_Sp_counted_base() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:121:7:std::_Sp_counted_base<_Lp>::~_Sp_counted_base() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_vector.h:347:7:void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
stl_vector.h:273:7:std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	16	static
stl_vector.h:347:7:void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
stl_vector.h:273:7:std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	16	static
stl_iterator.h:806:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	16	static
shared_ptr_base.h:1020:7:std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::_M_get() const [with _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single; bool <anonymous> = false; bool <anonymous> = false]	16	static
stl_iterator.h:827:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	16	static
stl_iterator.h:819:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	16	static
shared_ptr_base.h:733:7:std::__shared_count<_Lp>::__shared_count(const std::__shared_count<_Lp>&) [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_iterator.h:806:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	16	static
shared_ptr_base.h:1020:7:std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::_M_get() const [with _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single; bool <anonymous> = false; bool <anonymous> = false]	16	static
stl_iterator.h:907:5:bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	24	static
stl_iterator.h:827:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	16	static
stl_iterator.h:819:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	16	static
predefined_ops.h:288:5:__gnu_cxx::__ops::_Iter_pred<_Predicate> __gnu_cxx::__ops::__pred_iter(_Predicate) [with _Predicate = GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)>]	24	static
stl_algo.h:159:5:_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)> >]	40	static
stl_iterator.h:871:7:const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	16	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >]	24	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = ButtonShape&]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = Color&]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = unsigned int&]	16	static
unique_ptr.h:211:2:std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Tp, _Dp>::pointer) [with _Del = std::default_delete<Button>; <template-parameter-2-2> = void; _Tp = Button; _Dp = std::default_delete<Button>]	16	static
unique_ptr.h:153:18:std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = Button; _Dp = std::default_delete<Button>]	16	static
unique_ptr.h:365:7:std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = Button; _Dp = std::default_delete<Button>]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = Button*&]	16	static
unique_ptr.h:75:7:void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = Button]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::unique_ptr<Button, std::default_delete<Button> >&]	16	static
shared_ptr_base.h:1203:2:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = Button; _Del = std::default_delete<Button>; <template-parameter-2-3> = void; _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::shared_ptr<Button>&]	16	static
vector.tcc:109:7:) [with _Args = {std::shared_ptr<Button>}; _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>&]	16	static
unique_ptr.h:211:2:std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Tp, _Dp>::pointer) [with _Del = std::default_delete<TextBox>; <template-parameter-2-2> = void; _Tp = TextBox; _Dp = std::default_delete<TextBox>]	16	static
unique_ptr.h:153:18:std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	16	static
unique_ptr.h:365:7:std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = TextBox*&]	16	static
TextBox.h:10:7:TextBox::~TextBox()	16	static
unique_ptr.h:75:7:void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = TextBox]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::unique_ptr<TextBox, std::default_delete<TextBox> >&]	16	static
shared_ptr_base.h:1203:2:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Yp = TextBox; _Del = std::default_delete<TextBox>; <template-parameter-2-3> = void; _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::shared_ptr<TextBox>&]	16	static
vector.tcc:109:7:) [with _Args = {std::shared_ptr<TextBox>}; _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::shared_ptr<Button>]	24	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::shared_ptr<TextBox>]	24	static
shared_ptr_base.h:1309:7:std::__shared_ptr<_Tp, _Lp>::element_type* std::__shared_ptr<_Tp, _Lp>::get() const [with _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:1309:7:std::__shared_ptr<_Tp, _Lp>::element_type* std::__shared_ptr<_Tp, _Lp>::get() const [with _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_iterator.h:871:7:const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)>&]	16	static
predefined_ops.h:276:7:__gnu_cxx::__ops::_Iter_pred<_Predicate>::_Iter_pred(_Predicate) [with _Predicate = GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)>]	24	static
stl_algo.h:112:5:_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >; _Predicate = __gnu_cxx::__ops::_Iter_pred<GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)> >]	32	static
stl_iterator.h:989:5:typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	24	static
unique_ptr.h:147:7:std::__uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl(std::__uniq_ptr_impl<_Tp, _Dp>::pointer) [with _Tp = Button; _Dp = std::default_delete<Button>]	24	static
tuple:1320:5:>&) [with unsigned int __i = 0; _Elements = {Button*, std::default_delete<Button>}]	16	static
unique_ptr.h:155:18:_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = Button; _Dp = std::default_delete<Button>]	16	static
unique_ptr.h:360:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = Button; _Dp = std::default_delete<Button>]	16	static
shared_ptr_base.h:616:17:constexpr std::__shared_count<_Lp>::__shared_count() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
ptr_traits.h:155:5:constexpr _Tp* std::__to_address(_Tp*) [with _Tp = Button]	16	static
shared_ptr_base.h:699:2:std::__shared_count<_Lp>::__shared_count(std::unique_ptr<_Up, _Ep>&&) [with _Tp = Button; _Del = std::default_delete<Button>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
shared_ptr_base.h:741:7:std::__shared_count<_Lp>& std::__shared_count<_Lp>::operator=(const std::__shared_count<_Lp>&) [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
shared_ptr_base.h:1388:2:typename std::enable_if<(! std::__shared_ptr<_Tp, _Lp>::__has_esft_base<_Yp2>::value)>::type std::__shared_ptr<_Tp, _Lp>::_M_enable_shared_from_this_with(_Yp*) [with _Yp = Button; _Yp2 = Button; _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::shared_ptr<Button>]	16	static
alloc_traits.h:482:2:) [with _Up = std::shared_ptr<Button>; _Args = {std::shared_ptr<Button>}; _Tp = std::shared_ptr<Button>]	24	static
vector.tcc:426:7:) [with _Args = {std::shared_ptr<Button>}; _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	64	static
stl_vector.h:1140:7:std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::back() [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
unique_ptr.h:147:7:std::__uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl(std::__uniq_ptr_impl<_Tp, _Dp>::pointer) [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	24	static
tuple:1320:5:>&) [with unsigned int __i = 0; _Elements = {TextBox*, std::default_delete<TextBox>}]	16	static
unique_ptr.h:155:18:_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	16	static
unique_ptr.h:360:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	16	static
ptr_traits.h:155:5:constexpr _Tp* std::__to_address(_Tp*) [with _Tp = TextBox]	16	static
shared_ptr_base.h:699:2:std::__shared_count<_Lp>::__shared_count(std::unique_ptr<_Up, _Ep>&&) [with _Tp = TextBox; _Del = std::default_delete<TextBox>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
shared_ptr_base.h:1388:2:typename std::enable_if<(! std::__shared_ptr<_Tp, _Lp>::__has_esft_base<_Yp2>::value)>::type std::__shared_ptr<_Tp, _Lp>::_M_enable_shared_from_this_with(_Yp*) [with _Yp = TextBox; _Yp2 = TextBox; _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::shared_ptr<TextBox>]	16	static
alloc_traits.h:482:2:) [with _Up = std::shared_ptr<TextBox>; _Args = {std::shared_ptr<TextBox>}; _Tp = std::shared_ptr<TextBox>]	24	static
vector.tcc:426:7:) [with _Args = {std::shared_ptr<TextBox>}; _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	64	static
stl_vector.h:1140:7:std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::back() [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::shared_ptr<Button>]	24	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::shared_ptr<TextBox>]	24	static
predefined_ops.h:282:2:bool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<std::shared_ptr<Button>*, std::vector<std::shared_ptr<Button> > >; _Predicate = GUI::processInput(std::pair<unsigned int, unsigned int>)::<lambda(std::shared_ptr<Button>)>]	32	static
tuple:918:12:constexpr std::tuple<_T1, _T2>::tuple() [with _U1 = Button*; _U2 = std::default_delete<Button>; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = true; _T1 = Button*; _T2 = std::default_delete<Button>]	16	static
tuple:1309:5:>&) [with unsigned int __i = 0; _Head = Button*; _Tail = {std::default_delete<Button>}]	16	static
tuple:1320:5:>&) [with unsigned int __i = 1; _Elements = {Button*, std::default_delete<Button>}]	16	static
unique_ptr.h:154:18:std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = Button; _Dp = std::default_delete<Button>]	16	static
allocator.h:138:7:std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocator.h:153:7:std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
unique_ptr.h:381:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = Button; _Dp = std::default_delete<Button>]	24	static
alloc_traits.h:482:2:) [with _Up = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>; _Args = {Button*, std::default_delete<Button>&}; _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	32	static
new_allocator.h:144:2:) [with _Up = std::shared_ptr<Button>; _Args = {std::shared_ptr<Button>}; _Tp = std::shared_ptr<Button>]	32	static
stl_vector.h:1753:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	40	static
stl_vector.h:340:7:std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	16	static
stl_vector.h:462:7:static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	48	static
alloc_traits.h:495:2:static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = std::shared_ptr<Button>; _Tp = std::shared_ptr<Button>]	16	static
stl_iterator.h:867:7:__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = std::shared_ptr<Button>*; _Container = std::vector<std::shared_ptr<Button> >]	24	static
tuple:918:12:constexpr std::tuple<_T1, _T2>::tuple() [with _U1 = TextBox*; _U2 = std::default_delete<TextBox>; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = true; _T1 = TextBox*; _T2 = std::default_delete<TextBox>]	16	static
tuple:1309:5:>&) [with unsigned int __i = 0; _Head = TextBox*; _Tail = {std::default_delete<TextBox>}]	16	static
tuple:1320:5:>&) [with unsigned int __i = 1; _Elements = {TextBox*, std::default_delete<TextBox>}]	16	static
unique_ptr.h:154:18:std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	16	static
allocator.h:138:7:std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocator.h:153:7:std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
unique_ptr.h:381:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = TextBox; _Dp = std::default_delete<TextBox>]	24	static
alloc_traits.h:482:2:) [with _Up = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>; _Args = {TextBox*, std::default_delete<TextBox>&}; _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	32	static
new_allocator.h:144:2:) [with _Up = std::shared_ptr<TextBox>; _Args = {std::shared_ptr<TextBox>}; _Tp = std::shared_ptr<TextBox>]	32	static
stl_vector.h:1753:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	40	static
stl_iterator.h:989:5:typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	24	static
stl_vector.h:340:7:std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	16	static
stl_vector.h:462:7:static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	48	static
alloc_traits.h:495:2:static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = std::shared_ptr<TextBox>; _Tp = std::shared_ptr<TextBox>]	16	static
stl_iterator.h:867:7:__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = std::shared_ptr<TextBox>*; _Container = std::vector<std::shared_ptr<TextBox> >]	24	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::shared_ptr<Button>]	16	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::shared_ptr<TextBox>]	16	static
tuple:206:17:>::_Tuple_impl() [with unsigned int _Idx = 0; _Head = Button*; _Tail = {std::default_delete<Button>}]	16	static
tuple:195:7:>&) [with unsigned int _Idx = 0; _Head = Button*; _Tail = {std::default_delete<Button>}]	16	static
tuple:1309:5:>&) [with unsigned int __i = 1; _Head = std::default_delete<Button>; _Tail = {}]	16	static
tuple:1326:5:>&) [with unsigned int __i = 0; _Elements = {Button*, std::default_delete<Button>}]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
new_allocator.h:89:7:__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = Button*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::default_delete<Button>&]	16	static
new_allocator.h:144:2:) [with _Up = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>; _Args = {Button*, std::default_delete<Button>&}; _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	40	static
shared_ptr.h:254:7:std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = Button]	24	static
stl_vector.h:920:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	16	static
stl_vector.h:915:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::shared_ptr<Button>]	16	static
stl_vector.h:450:7:static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_do_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&, std::true_type) [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
new_allocator.h:151:2:void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::shared_ptr<Button>; _Tp = std::shared_ptr<Button>]	16	static
tuple:206:17:>::_Tuple_impl() [with unsigned int _Idx = 0; _Head = TextBox*; _Tail = {std::default_delete<TextBox>}]	16	static
tuple:195:7:>&) [with unsigned int _Idx = 0; _Head = TextBox*; _Tail = {std::default_delete<TextBox>}]	16	static
tuple:1309:5:>&) [with unsigned int __i = 1; _Head = std::default_delete<TextBox>; _Tail = {}]	16	static
tuple:1326:5:>&) [with unsigned int __i = 0; _Elements = {TextBox*, std::default_delete<TextBox>}]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
new_allocator.h:89:7:__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = TextBox*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::default_delete<TextBox>&]	16	static
new_allocator.h:144:2:) [with _Up = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>; _Args = {TextBox*, std::default_delete<TextBox>&}; _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	40	static
shared_ptr.h:254:7:std::shared_ptr<_Tp>::shared_ptr(std::shared_ptr<_Tp>&&) [with _Tp = TextBox]	24	static
stl_vector.h:920:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	16	static
stl_vector.h:915:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::shared_ptr<TextBox>]	16	static
stl_vector.h:450:7:static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_do_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&, std::true_type) [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
new_allocator.h:151:2:void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::shared_ptr<TextBox>; _Tp = std::shared_ptr<TextBox>]	16	static
tuple:339:17:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl() [with unsigned int _Idx = 1; _Head = std::default_delete<Button>]	16	static
tuple:122:17:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base() [with unsigned int _Idx = 0; _Head = Button*]	16	static
tuple:160:7:static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0; _Head = Button*]	16	static
tuple:334:7:static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with unsigned int _Idx = 1; _Head = std::default_delete<Button>]	16	static
tuple:1314:5:>&) [with unsigned int __i = 0; _Head = Button*; _Tail = {std::default_delete<Button>}]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
shared_ptr_base.h:460:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Sp_counted_deleter(_Ptr, _Deleter) [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	40	static
shared_ptr_base.h:1176:7:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::__shared_ptr<_Tp, _Lp>&&) [with _Tp = Button; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_vector.h:1773:7:static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	24	static
stl_vector.h:277:7:const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::shared_ptr<Button>; _Alloc = std::allocator<std::shared_ptr<Button> >]	16	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::shared_ptr<Button>]	24	static
stl_uninitialized.h:958:5:_ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::shared_ptr<Button>*; _ForwardIterator = std::shared_ptr<Button>*; _Allocator = std::allocator<std::shared_ptr<Button> >]	32	static
tuple:339:17:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl() [with unsigned int _Idx = 1; _Head = std::default_delete<TextBox>]	16	static
tuple:122:17:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base() [with unsigned int _Idx = 0; _Head = TextBox*]	16	static
tuple:160:7:static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0; _Head = TextBox*]	16	static
tuple:334:7:static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with unsigned int _Idx = 1; _Head = std::default_delete<TextBox>]	16	static
tuple:1314:5:>&) [with unsigned int __i = 0; _Head = TextBox*; _Tail = {std::default_delete<TextBox>}]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
shared_ptr_base.h:460:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Sp_counted_deleter(_Ptr, _Deleter) [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	40	static
shared_ptr_base.h:1176:7:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::__shared_ptr<_Tp, _Lp>&&) [with _Tp = TextBox; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_vector.h:1773:7:static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	24	static
stl_vector.h:277:7:const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::shared_ptr<TextBox>; _Alloc = std::allocator<std::shared_ptr<TextBox> >]	16	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::shared_ptr<TextBox>]	24	static
stl_uninitialized.h:958:5:_ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::shared_ptr<TextBox>*; _ForwardIterator = std::shared_ptr<TextBox>*; _Allocator = std::allocator<std::shared_ptr<TextBox> >]	32	static
tuple:76:17:constexpr std::_Head_base<_Idx, _Head, true>::_Head_base() [with unsigned int _Idx = 1; _Head = std::default_delete<Button>]	16	static
tuple:113:7:static constexpr _Head& std::_Head_base<_Idx, _Head, true>::_M_head(std::_Head_base<_Idx, _Head, true>&) [with unsigned int _Idx = 1; _Head = std::default_delete<Button>]	16	static
tuple:198:7:>&) [with unsigned int _Idx = 0; _Head = Button*; _Tail = {std::default_delete<Button>}]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::default_delete<Button>&]	16	static
shared_ptr_base.h:117:7:std::_Sp_counted_base<_Lp>::_Sp_counted_base() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:446:2:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_Impl(_Ptr, _Deleter, const _Alloc&) [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
shared_ptr_base.h:756:7:void std::__shared_count<_Lp>::_M_swap(std::__shared_count<_Lp>&) [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
alloc_traits.h:505:7:static std::allocator_traits<std::allocator<_CharT> >::size_type std::allocator_traits<std::allocator<_CharT> >::max_size(const allocator_type&) [with _Tp = std::shared_ptr<Button>]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::shared_ptr<Button>]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = std::shared_ptr<Button>*]	16	static
stl_uninitialized.h:936:5:_ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::shared_ptr<Button>*; _ForwardIterator = std::shared_ptr<Button>*; _Allocator = std::allocator<std::shared_ptr<Button> >]	40	static
tuple:76:17:constexpr std::_Head_base<_Idx, _Head, true>::_Head_base() [with unsigned int _Idx = 1; _Head = std::default_delete<TextBox>]	16	static
tuple:113:7:static constexpr _Head& std::_Head_base<_Idx, _Head, true>::_M_head(std::_Head_base<_Idx, _Head, true>&) [with unsigned int _Idx = 1; _Head = std::default_delete<TextBox>]	16	static
tuple:198:7:>&) [with unsigned int _Idx = 0; _Head = TextBox*; _Tail = {std::default_delete<TextBox>}]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::default_delete<TextBox>&]	16	static
shared_ptr_base.h:446:2:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_Impl(_Ptr, _Deleter, const _Alloc&) [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
alloc_traits.h:505:7:static std::allocator_traits<std::allocator<_CharT> >::size_type std::allocator_traits<std::allocator<_CharT> >::max_size(const allocator_type&) [with _Tp = std::shared_ptr<TextBox>]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::shared_ptr<TextBox>]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = std::shared_ptr<TextBox>*]	16	static
stl_uninitialized.h:936:5:_ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::shared_ptr<TextBox>*; _ForwardIterator = std::shared_ptr<TextBox>*; _Allocator = std::allocator<std::shared_ptr<TextBox> >]	40	static
tuple:163:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0; _Head = Button*]	16	static
shared_ptr_base.h:415:16:std::_Sp_ebo_helper<_Nm, _Tp, true>::_Sp_ebo_helper(_Tp&&) [with int _Nm = 0; _Tp = std::default_delete<Button>]	16	static
shared_ptr_base.h:414:16:std::_Sp_ebo_helper<_Nm, _Tp, true>::_Sp_ebo_helper(const _Tp&) [with int _Nm = 1; _Tp = std::allocator<void>]	16	static
stl_uninitialized.h:905:5:void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::shared_ptr<Button>; _Up = std::shared_ptr<Button>; _Allocator = std::allocator<std::shared_ptr<Button> >]	24	static
tuple:163:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0; _Head = TextBox*]	16	static
shared_ptr_base.h:415:16:std::_Sp_ebo_helper<_Nm, _Tp, true>::_Sp_ebo_helper(_Tp&&) [with int _Nm = 0; _Tp = std::default_delete<TextBox>]	16	static
stl_uninitialized.h:905:5:void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::shared_ptr<TextBox>; _Up = std::shared_ptr<TextBox>; _Allocator = std::allocator<std::shared_ptr<TextBox> >]	24	static
shared_ptr_base.h:467:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::~_Sp_counted_deleter() [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:467:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::~_Sp_counted_deleter() [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:470:7:void std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_dispose() [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:474:7:void std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_destroy() [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
shared_ptr_base.h:482:7:void* std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_get_deleter(const std::type_info&) [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:467:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::~_Sp_counted_deleter() [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:467:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::~_Sp_counted_deleter() [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:470:7:void std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_dispose() [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:474:7:void std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_destroy() [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
shared_ptr_base.h:482:7:void* std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_get_deleter(const std::type_info&) [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:450:12:_Deleter& std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_M_del() [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:451:10:_Alloc& std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_M_alloc() [with _Ptr = TextBox*; _Deleter = std::default_delete<TextBox>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
allocator.h:151:2:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = void; _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocated_ptr.h:52:7:std::__allocated_ptr<_Alloc>::__allocated_ptr(_Alloc&, std::__allocated_ptr<_Alloc>::pointer) [with _Alloc = std::allocator<std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single> >]	24	static
allocated_ptr.h:70:7:std::__allocated_ptr<_Alloc>::~__allocated_ptr() [with _Alloc = std::allocator<std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
shared_ptr_base.h:450:12:_Deleter& std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_M_del() [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:451:10:_Alloc& std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_M_alloc() [with _Ptr = Button*; _Deleter = std::default_delete<Button>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
allocator.h:151:2:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = void; _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocated_ptr.h:52:7:std::__allocated_ptr<_Alloc>::__allocated_ptr(_Alloc&, std::__allocated_ptr<_Alloc>::pointer) [with _Alloc = std::allocator<std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single> >]	24	static
allocated_ptr.h:70:7:std::__allocated_ptr<_Alloc>::~__allocated_ptr() [with _Alloc = std::allocator<std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
shared_ptr_base.h:418:7:static _Tp& std::_Sp_ebo_helper<_Nm, _Tp, true>::_S_get(std::_Sp_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::default_delete<TextBox>]	16	static
shared_ptr_base.h:418:7:static _Tp& std::_Sp_ebo_helper<_Nm, _Tp, true>::_S_get(std::_Sp_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 1; _Tp = std::allocator<void>]	16	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::allocator<std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
shared_ptr_base.h:418:7:static _Tp& std::_Sp_ebo_helper<_Nm, _Tp, true>::_S_get(std::_Sp_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::default_delete<Button>]	16	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::allocator<std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Sp_counted_deleter<TextBox*, std::default_delete<TextBox>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Sp_counted_deleter<Button*, std::default_delete<Button>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
